<?xml version="1.0" encoding="UTF-8"?>

<!--Autogenerated by Cloudera CM on 2013-06-28T08:43:44.423Z -->
<configuration>
	<property>
		<name>fs.defaultFS</name>
		<value>mongodb://:27017/giant/storage</value>
		<description>
			mongodb://${HOST}:${PORT}/${DB}/${STORAGE}
		</description>
	</property>
	<property>
  		<name>fs.permissions</name>
  		<value>true</value>
  		<description>
		    If "true", enable permission checking in MongoDBFileSystem.
		    If "false", permission checking is turned off,
		    but all other behavior is unchanged.
		    Switching from one parameter value to the other does not change the mode,
		    owner or group of files or directories.
  		</description>
	</property>
	<property>
  		<name>username</name>
  		<value>mongo</value>
  		<description>
			MongoDB登录用户名
  		</description>
	</property>
	<property>
  		<name>password</name>
  		<value>mongo</value>
  		<description>
			MongoDB登录密码
  		</description>
	</property>
	<property>
  		<name>defaultgroup</name>
  		<value>supergroup</value>
  		<description>
		            默认用户组
  		</description>
	</property>
	<property>
		<name>readPreference</name>
		<value>primary</value>
		<description>
			读策略:
				primary				//只从主节点读
				secondary			//只从从节点读
				secondarypreferred	//优先从从节点读
				primarypreferred	//优先从主节点读
				nearest				//就近读
		</description>
	</property>
	<property>
		<name>writeConcern</name>
		<value>replica_acknowledged</value>
		<description>
			写策略:
				errors_ignored		//只将消息发出，任何情况都不抛异常，即使网络故障
				unacknowledged		//数据写到socket中即返回，会处理网络异常
				acknowledged		//得到主节点通知后返回，会处理网络和服务器异常
				journaled			//是mongodb做备份、容灾的日志机制。会等待journaled返回
				fsynced				//会等待主节点将数据写入磁盘
				replica_acknowledged//等待sharding中的两个节点完成写操作
				majority			//会等待大多数节点完成写操作
		</description>
	</property>
	<property>
		<name>fs.local.block.size</name>
		<value>262144</value>
		<description>
			默认块大小(256K)
		</description>
	</property>
	<property>
		<name>connectionsPerHost</name>
		<value>10</value>
		<description>
			MongoDB连接池大小
		</description>
	</property>
	<property>
		<name>threadsAllowedToBlockForConnectionMultiplier</name>
		<value>5</value>
		<description>
			这个数值乘以连接池大小是操作等待队列的大小
		</description>
	</property>
	<property>
		<name>description</name>
		<value>This is Hadoop Filesystem with MongoDB implement!</value>
		<description>
			MongoClient的描述
		</description>
	</property>
	<property>
		<name>maxWaitTime</name>
		<value>120000</value>
		<description>
			等待获取连接的超时时间
		</description>
	</property>
	<property>
		<name>connectTimeout</name>
		<value>10000</value>
		<description>
			连接超时时间
		</description>
	</property>
	<property>
		<name>socketTimeout</name>
		<value>0</value>
		<description>
			Socket超时时间
		</description>
	</property>
	<property>
		<name>socketKeepAlive</name>
		<value>false</value>
		<description>
			是否一直保持着socket
		</description>
	</property>
	<property>
		<name>autoConnectRetry</name>
		<value>false</value>
		<description>
			是否自动重试连接
		</description>
	</property>
	<property>
		<name>maxAutoConnectRetryTime</name>
		<value>0</value>
		<description>
			最多自动重试次数
		</description>
	</property>
	<property>
		<name>cursorFinalizerEnabled</name>
		<value>true</value>
		<description>
			客户端不关闭的情况下，DBCursor对象的finalizer方法是否可用
		</description>
	</property>
	<property>
		<name>alwaysUseMBeans</name>
		<value>false</value>
		<description>
			是否一直使用MBeans，不管java的版本是java6或更高
		</description>
	</property>
	<property>
		<name>dbDecoderFactory</name>
		<value></value>
		<description>
			数据库解码器工厂
			必须实现以下两个接口
				com.mongodb.DBDecoderFactory
				org.apache.hadoop.conf。Configurable
		</description>
	</property>
	<property>
		<name>dbEncoderFactory</name>
		<value></value>
		<description>
			数据库编码器工厂
			必须实现以下两个接口
				com.mongodb.DBEncoderFactory
				org.apache.hadoop.conf。Configurable
		</description>
	</property>
</configuration>
